// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String        @id @default(cuid())
  name                 String
  email                String        @unique
  password             String
  role                 Role          @default(CLIENT)
  createdAt            DateTime      @default(now())
  updatedAt            DateTime      @updatedAt
  appointmentsAsClient Appointment[] @relation("ClientAppointments")
  appointmentsAsBarber Appointment[] @relation("BarberAppointments")
  Loyalty              Loyalty?
}

model Service {
  id           Int           @id @default(autoincrement())
  name         String
  duration     Int // minutos
  price        Float
  appointments Appointment[]
}

model Appointment {
  id          Int               @id @default(autoincrement())
  date        DateTime
  userId      String
  barberId    String
  serviceId   Int
  serviceName String?
  status      AppointmentStatus @default(SCHEDULED)
  service     Service           @relation(fields: [serviceId], references: [id])
  user        User              @relation("ClientAppointments", fields: [userId], references: [id])
  barber      User              @relation("BarberAppointments", fields: [barberId], references: [id])
}

model Loyalty {
  id     Int    @id @default(autoincrement())
  userId String @unique
  points Int    @default(0)
  user   User   @relation(fields: [userId], references: [id])
}

enum AppointmentStatus {
  SCHEDULED
  COMPLETED
  CANCELLED
}

enum Role {
  CLIENT
  BARBER
  ADMIN
}
